apply plugin: 'com.android.library'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
        warningsAsErrors true
        showAll true
    }
}

checkstyle {
    configFile project.file('checkstyle.xml')
    showViolations true
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name

    def checkstyle = project.tasks.create "checkstyle${name.capitalize()}", Checkstyle
    checkstyle.dependsOn variant.javaCompile
    checkstyle.source variant.javaCompile.source
    checkstyle.classpath = project.fileTree(variant.javaCompile.destinationDir)
    checkstyle.exclude('**/BuildConfig.java')
    project.tasks.getByName("check").dependsOn checkstyle

    def pmd = project.tasks.create "pmd${name}", Pmd
    pmd.dependsOn variant.javaCompile
    pmd.source variant.javaCompile.source
    pmd.exclude('**/BuildConfig.java')
    project.tasks.getByName("check").dependsOn pmd

    // no FindBugs until https://code.google.com/p/android/issues/detail?id=55839 is resolved
//    def findBugs = project.tasks.create "findBugs${name}", FindBugs
//    findBugs.dependsOn variant.javaCompile
//    findBugs.source variant.javaCompile.source
//    findBugs.classpath = project.fileTree(variant.javaCompile.destinationDir)
//    findBugs.exclude('**/BuildConfig.java')
//    project.tasks.getByName("check").dependsOn findBugs
}

dependencies {
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.retrofit:retrofit:1.6.0'
    compile 'com.netflix.rxjava:rxjava-android:0.19.2'
    compile project(':Hawk')
}
